@model CoolBooks_NinjaExperts.ViewModels.BookReviewsViewModel
@*Template: https://www.bootdey.com/snippets/view/bs4-beta-comment-list*@
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css" rel="stylesheet"/>
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/css/ReviewsStyle.css" />
<link rel="stylesheet" href="~/css/CommentsStyle.css" />

@using Microsoft.AspNetCore.Identity
@using CoolBooks_NinjaExperts.Areas.Identity.Data

@inject SignInManager<UserInfo> SignInManager
@inject UserManager<UserInfo> UserManager

<div>
    @if (SignInManager.IsSignedIn(User))
    {
    <a asp-action="Index">Back to List</a>
    }
</div>

<section>
    <div class="container px-4 px-lg-5 my-5 d-flex flex-row">
        <div class="col-md-4 mb-10">
            @{
                var baseThumb = Convert.ToBase64String(Model.Book.Image.Image);
                var imgsrc2 = string.Format("data:image/thumbnail;base64,{0}", baseThumb);
            }
            <img src="@imgsrc2" style="width:400px; height:550px;">
        </div>
        <div class="col-md-6" style="padding-left: 15px;">
            <div class="small mb-1">

                @{
                for(int i = 0;  i < Model.Book.Genres.Count(); i++)
                    {
                        if (i == Model.Book.Genres.Count()-1)
                        {
                            <a class="text-dark" asp-controller="Genres" asp-action="Details" asp-route-id="@Model.Book.Genres[i].Id" style="text-decoration: none">@Model.Book.Genres[i].Name</a>
                        }
                        else
                        {
                            <a class="text-dark" asp-controller="Genres" asp-action="Details" asp-route-id="@Model.Book.Genres[i].Id" style="text-decoration: none">@Model.Book.Genres[i].Name | </a>
                        }
                    }
                }
            
            </div>
            
            <h1 class="display-5 fw-bolder">@Html.DisplayFor(model => model.Book.Title)</h1>
            <div class="fs-5 mb-5">

                <span>
                    @{
                        for(int i = 0;  i < Model.Book.Authors.Count(); i++)
                        {
                            if (i == Model.Book.Authors.Count()-1)
                            {
                                <a class="text-dark" asp-controller="Authors" asp-action="Details" asp-route-id="@Model.Book.Authors[i].Id" style="text-decoration: none">@Model.Book.Authors[i].FullName</a>
                            }
                            else
                            {
                                <a class="text-dark" asp-controller="Authors" asp-action="Details" asp-route-id="@Model.Book.Authors[i].Id" style="text-decoration: none">@Model.Book.Authors[i].FullName & </a>
                            }
                        }
                    }
                </span><br />
                <span>ISBN: @Html.DisplayFor(model => Model.Book.ISBN)</span>
                                
                <div>
                    @for (var i = 1; i <= 5; i++)
                        {
                            if (@Model.Book.Rating >= i)
                            {
                                <span class="fa fa-star checked"></span>
                            }
                            else
                            {
                                <span class="fa fa-star"></span>
                            }
                        }
                </div>
            </div>
            <p class="lead">@Html.DisplayFor(model => Model.Book.Description)</p>
        <partial name="_DropdownList"/>
        </div>
    </div>
</section>


@*---------------------------Review form---------------------------*@
<div class="container">
    <div class="row">
        <div class="bg-white rounded shadow-sm p-4 mb-5 rating-review-select-page col-md-8">
            <h5 class="mb-4">Leave a Review</h5>

            <div>
            <form asp-controller="Reviews" asp-action="Create" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Review.UserId" value="@Model.UserId"/>
                <input type="hidden" asp-for="Review.BookId" value="@Model.Book.Id" />
                <div class="form-group">
                    <fieldset>
                        <span class="star-cb-group">
                            <input type="radio" id="rating-5" name="bookRating" value="5" />
                            <label for="rating-5">5</label>
                            <input type="radio" id="rating-4" name="bookRating" value="4" />
                            <label for="rating-4">4</label>
                            <input type="radio" id="rating-3" name="bookRating" value="3" checked="checked"/>
                            <label for="rating-3">3</label>
                            <input type="radio" id="rating-2" name="bookRating" value="2" />
                            <label for="rating-2">2</label>
                            <input type="radio" id="rating-1" name="bookRating" value="1" />
                            <label for="rating-1">1</label>
                        </span>
                    </fieldset>
                </div>
                <div class="form-group">
                    <label asp-for="Review.Title" class="control-label"></label>
                    <input asp-for="Review.Title" class="form-control" />
                    <span asp-validation-for="Review.Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Review.Text" class="control-label"></label>
                    <textarea id="desc-area" asp-for="Review.Text" class="form-control row-cols-6" rows="5" cols="75" maxlength="500"></textarea>
                    <span id="count_message" asp-validation-for="Review.Text" class="text-danger"></span>
                    <div id="chars-remaining" style="text-align:right; font-weight:bold;">500 characters remaining</div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
            </div>


        </div>
    </div>
</div>




@*------------------------------Reviews------------------------------*@

<div class="container">
    <div class="row">
        @{
            int f = 0; /*Index for different forms/partialViews*/
        }
        @foreach (var review in Model.Reviews) 
        {
            f++;
            <div class="col-md-8">
                <div class="media g-mb-30 media-comment">
                    <img class="d-flex g-width-50 g-height-50 rounded-circle g-mt-3 g-mr-15" src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Image Description">
                    <div class="media-body u-shadow-v18 g-bg-secondary g-pa-30">
                      <div class="g-mb-15">
                        <div class="d-flex justify-content-between">
                        <h5 class="h5 g-color-gray-dark-v1 mb-0">@review.Title</h5>
                        @{
                            if(@Model.FlaggedReviews.Where(x=>x.ReviewId == review.Id && x.FlaggedId == 2).Count() > 0)
                            {
                                    @Html.ActionLink("", "FlagReview","Flagged", 
                                        new{  isFlagged = false, reviewId=review.Id }, // values
                                        new{  @class="bi bi-flag", @style="color:Red;"}); // style
                            }
                            else
                            {
                                @Html.ActionLink("", "FlagReview","Flagged", 
                                        new{  isFlagged = true, reviewId=review.Id }, // values
                                        new{  @class="bi bi-flag", @style="color:grey;"}); // style
                            }
                        }
                        </div>

                        @*Dynamic star rating in reviews*@
                        @for (var i = 1; i <= 5; i++)
                        {
                            if (review.Rating >= i)
                            {
                                <span class="fa fa-star checked"></span>
                            }
                            else
                            {
                                <span class="fa fa-star"></span>
                            }
                        }
                      </div>
                      <p style="margin-top:1rem;">@review.Text </p>
                        <span class="g-color-gray-dark-v4 g-font-size-12">Created by: <b>@review.User.UserName</b> | @review.Created</span>
                        @if (User.Identity.IsAuthenticated && (review.UserId == Model.UserId || User.IsInRole("Admin")))
                        {
                            <form asp-action="Delete" asp-controller="Reviews" onsubmit="return confirm('Do you really want to delete the post?');">
                                @Html.ActionLink("", "Edit", "Reviews", new { id = review.Id }, new {@class="btn btn-info btn-sm bi bi-pencil"})
                                <input type="hidden" name="id" value="@review.Id">
                                <button type="submit" class="btn btn-danger btn-sm bi bi-trash"></button>
                            </form>
                        }
                        else if (User.Identity.IsAuthenticated && User.IsInRole("Moderator"))
                        {
                            <form>
                                @Html.ActionLink("", "Edit", "Comments", new { id = review.Id }, new {@class="btn btn-info btn-sm bi bi-pencil"})
                                <input type="hidden" name="id" value="@review.Id">
                            </form>
                        }
        
                        @*REVIEW LIKES AND DISLIKES*@
                        <ul class="list-inline d-sm-flex my-0">
                            <li class="list-inline-item g-mr-20">
                              <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="#!"> @*list of users who liked?*@
                                @{
                                    if(@review.ReviewLikes.Where(x=>x.ReviewId == review.Id && x.UserId == @Model.UserId).Count() > 0)
                                    {
                                      
                                        @Html.ActionLink("", "LikeReviews","ManageContent", 
                                            new{ userId = @Model.UserId, check = false, reviewId=review.Id }, // values
                                            new{  @class="fa fa-thumbs-up g-pos-rel g-top-1 g-mr-3", @style="color:green;"}); // style
                                        
                                    }
                                    else
                                    {
                                        @Html.ActionLink("", "LikeReviews","ManageContent", 
                                            new{  check = true, reviewId=review.Id}, // values
                                            new{  @class="fa fa-thumbs-up g-pos-rel g-top-1 g-mr-3", @style="color:grey;"}); // style
                                    }
                                    @if(review.ReviewLikes.Where(x=>x.ReviewId == review.Id).Count()>0)
                                        @review.ReviewLikes.Where(x=>x.ReviewId == review.Id).Count(); // Total Likes on this review
                                }
                            
                              </a>


                            </li>
                            <li class="list-inline-item g-mr-20">
                              <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="#!">
                                @{
                                    if(@review.ReviewDislikes.Where(x=>x.ReviewId == review.Id && x.UserId == @Model.UserId).Count() > 0)
                                    {
                                      
                                        @Html.ActionLink("", "DislikeReviews","ManageContent", 
                                            new{ check = false, reviewId=review.Id }, // values
                                            new{ @class="fa fa-thumbs-down g-pos-rel g-top-1 g-mr-3", @style="color:red;"}); // style
                                        
                                    }
                                    else
                                    {
                                        @Html.ActionLink("", "DislikeReviews","ManageContent", 
                                            new{ userId = @Model.UserId, check = true, reviewId=review.Id}, // values
                                            new{  @class="fa fa-thumbs-down g-pos-rel g-top-1 g-mr-3", @style="color:grey;"}); // style
                                    }
                                    @if(review.ReviewDislikes.Where(x=>x.ReviewId == review.Id).Count()>0)
                                        @review.ReviewDislikes.Where(x=>x.ReviewId == review.Id).Count(); // Total Likes on this review
                                }
                              </a>
                            </li>
                          

                   


                            <script type="text/javascript">

                                $(function () {
                                    $('.comments_@f').click(function () {
                                        var $buttonClicked = $(this);
                                        var id = $buttonClicked.attr('data');

                                        $.ajax({
                                            url: '@Url.Action("Create", "Comments", new { review = review.Id })',
                                            type: 'GET',
                                            data: { id: id },
                                            success: function (partialView) {
                                                $('#_CommentForm_@f').html(partialView);
                                                $('#_CommentForm_@f').show();
                                            }
                                        });
                                    });
                                });
                            </script>
                            @*------------------------------Comments------------------------------*@
                            <li class="list-inline-item ml-auto">
                                <i class="fa fa-reply g-pos-rel g-top-1 g-mr-3">
                                 <a id="changeCursor" class="comments_@f text-dark" style="text-decoration:none;" data="@review.Id">Comment</a>
                                 </i>                                
                                                               
                            </li>
                            <li>

                                <details>
                                    <summary>View Comments [@review.Comments.Count()]</summary>
                                    @{int f2 = 0;}
                                    <ul>        
                            
                            @foreach (var comment in review.Comments)
                            {
                                f2++;
                                <script type="text/javascript">
                                    $(function () {
                                        $('.replies_@f2@review.Id').click(function () {
                                            var $buttonClicked = $(this);
                                            var id = $buttonClicked.attr('data');

                                            $.ajax({
                                                url: '@Url.Action("Create", "Replies", new { comment_and_review = @comment.Id + "," + @review.Id })',
                                                type: 'GET',
                                                data: { id: id },
                                                success: function (partialView)
                                                {
                                                    $('#_ReplyForm_@f2@review.Id').html(partialView);
                                                    $('#_ReplyForm_@f2@review.Id').show();
                                                }
                                            });
                                        });
                                    });
                                </script>

                                <p class="list-inline-item ml-auto" style="margin-bottom:0"><b>@comment.User.UserName</b> | @comment.Comment <br>
                                <span class="g-color-gray-dark-v4 g-font-size-12">@comment.Created</span>
                                @if (User.Identity.IsAuthenticated && (comment.UserId == Model.UserId || User.IsInRole("Admin")))
                                {
                                    <form asp-action="Delete" asp-controller="Comments" onsubmit="return confirm('Do you really want to delete the post?');">
                                        @Html.ActionLink("", "Edit", "Comments", new { id = comment.Id }, new {@class="btn btn-info btn-sm bi bi-pencil"})
                                        <input type="hidden" name="id" value="@comment.Id">
                                        <button type="submit" class="btn btn-danger btn-sm bi bi-trash"></button>
                                    </form>
                                }
                                else if (User.Identity.IsAuthenticated && User.IsInRole("Moderator"))
                                {
                                    <form>
                                        @Html.ActionLink("", "Edit", "Comments", new { id = comment.Id }, new {@class="btn btn-info btn-sm bi bi-pencil"})
                                        <input type="hidden" name="id" value="@comment.Id">
                                    </form>
                                }
                                  
                                                 <li class="list-inline-item g-mr-20">
                                            <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="#!"> @*list of users who liked?*@
                                                @{
                                                    if(@comment.CommentLikes.Where(x=>x.CommentId == comment.Id && x.UserId == @Model.UserId).Count() > 0)
                                                     {
                                      
                                                         @Html.ActionLink("", "LikeComments","ManageContent", 
                                                         new{  check = false, commentId=comment.Id }, // values
                                                         new{  @class="fa fa-thumbs-up g-pos-rel g-top-1 g-mr-3", @style="color:green;"}); // style
                                        
                                                     }
                                                    else
                                                    {
                                                         @Html.ActionLink("", "LikeComments","ManageContent", 
                                                         new{  check = true, commentId=comment.Id}, // values
                                                         new{  @class="fa fa-thumbs-up g-pos-rel g-top-1 g-mr-3", @style="color:grey;"}); // style
                                                    }
                                                    @if(comment.CommentLikes.Where(x=>x.CommentId == comment.Id).Count()>0)

                                                        @comment.CommentLikes.Where(x=>x.CommentId == comment.Id).Count(); // Total Likes on this Comment
                                                }
                            
                                            </a>
                                      </li>
                                      <li class="list-inline-item g-mr-20">
                                        <a class="u-link-v5 g-color-gray-dark-v4 g-color-primary--hover" href="#!">
                                            @{
                                                if(@comment.CommentDislikes.Where(x=>x.CommentId == comment.Id && x.UserId == @Model.UserId).Count() > 0)
                                                {
                                      
                                                    @Html.ActionLink("", "DislikeComments","ManageContent", 
                                                    new{ check = false, commentId=comment.Id }, // values
                                                    new{ @class="fa fa-thumbs-down g-pos-rel g-top-1 g-mr-3", @style="color:red;"}); // style
                                        
                                                }
                                                else
                                                {
                                                    @Html.ActionLink("", "DislikeComments","ManageContent", 
                                                    new{  check = true, commentId=comment.Id}, // values
                                                    new{  @class="fa fa-thumbs-down g-pos-rel g-top-1 g-mr-3", @style="color:grey;"}); // style
                                                }
                                                @if(comment.CommentDislikes.Where(x=>x.CommentId == comment.Id).Count()>0)

                                                    @comment.CommentDislikes.Where(x=>x.CommentId == comment.Id).Count(); // Total Dislikes on this comment
                                            }
                                        </a>
                                        <div class="list-inline-item g-mr-20">
                                                @{  
                                                    if(@Model.FlaggedComments.Where(x=>x.CommentId == comment.Id && x.FlaggedId == 2).Count() > 0)
                                                    {
                                                        @Html.ActionLink("", "FlagComment","Flagged", 
                                                                new{  isFlagged = false, commentId=comment.Id }, // values
                                                                new{  @class="bi bi-flag", @style="color:Red;"}); // style
                                                    }
                                                    else
                                                    {
                                                        @Html.ActionLink("", "FlagComment","Flagged", 
                                                                new{  isFlagged = true, commentId=comment.Id, reviewId=review.Id }, // values
                                                                new{  @class="bi bi-flag", @style="color:grey;"}); // style
                                                    }
                                                }
                                         </div>
                                      </li>

                                      @*------------------------------Replies------------------------------*@
                                <i class="fa fa-reply g-pos-rel g-top-1 g-mr-3">
                                    <a id="changeCursor" class="replies_@f2@review.Id text-dark" style="text-decoration:none;" data="@comment.Id">Reply</a> 
                                </i>
                                </p>
                               
                                <li style="list-style-type: none;">

                                    <details>
                                    <summary>View Replies [@comment.Replies.Count()]</summary>
                                      
                                        
                                        <ul class="list-inline-item g-mr-20" ><ul>
                                        
                                        @foreach (var reply in comment.Replies)
                                        {
                                        
                                                <p class="list-inline-item ml-auto" style="margin-bottom:0px"><b>@reply.User.UserName</b> | @reply.Reply</p>
                                                @if (User.Identity.IsAuthenticated && (reply.UserId == Model.UserId || User.IsInRole("Admin")))
                                                {
                                                    <form asp-action="Delete" asp-controller="Replies" onsubmit="return confirm('Do you really want to delete the post?');">
                                                        @Html.ActionLink("", "Edit", "Replies", new { id = reply.Id }, new {@class="btn btn-info btn-sm bi bi-pencil"})
                                                        <input type="hidden" name="id" value="@reply.Id">
                                                        <button type="submit" class="btn btn-danger btn-sm bi bi-trash"></button>
                                                    </form>
                                                }
                                                else if (User.Identity.IsAuthenticated && User.IsInRole("Moderator"))
                                                {
                                                    <form>
                                                        @Html.ActionLink("", "Edit", "Comments", new { id = reply.Id }, new {@class="btn btn-info btn-sm bi bi-pencil"})
                                                        <input type="hidden" name="id" value="@reply.Id">
                                                    </form>
                                                }
                                                <hr><br />
                                        
                                        
                                        }
                                        </ul></ul>
                                        
                                </details>
                                <hr>
                                <div id="_ReplyForm_@f2@review.Id" style="display:none"></div>
                                </li>    
                                
                            }


                                    </ul>
                                 </details>
                            </li>
                        
                      </ul>
                    </div>
                </div>
            </div>
            <div id="_CommentForm_@f" style="display:none"></div> 
            
        }
    </div>
</div>




@*<script type="text/javascript">

    function loadPartialView() {
        $("#partialDiv").load('@Url.Action("Create","Comments")');
    }
</script>*@        



 <script>

//Hide/Show comments
function myFunction() {
    var x = document.getElementById("hidden");
    if (x.style.display === "block") {
    x.style.display = "none";
    } 
    else {
    x.style.display = "block";
    }
}

//Scroll back to Page-position
document.addEventListener("DOMContentLoaded", function(event) { 
    var scrollpos = localStorage.getItem('scrollpos');
    if (scrollpos) window.scrollTo(0, scrollpos);
});

window.onbeforeunload = function(e) {
    localStorage.setItem('scrollpos', window.scrollY);
};


//Books/Create - Description character counter
const descArea = document.getElementById('desc-area');
const charsRemaining = document.getElementById('chars-remaining');
const MAX_CHARS = 500;
descArea.addEventListener('input', () =>
{
    const remaining = MAX_CHARS - descArea.value.length;
    const color = remaining < MAX_CHARS * 0.1 ? 'red' : null;
    charsRemaining.textContent = remaining + ' characters remaining';
    charsRemaining.style.color = color;
});

//CommentSection - ANVÄNDS EJ
const showContainers = document.querySelectorAll(".show-replies");

 showContainers.forEach((btn) => 
    btn.addEventListener("click", (e) => {
        let parentContainer = e.target.closest("comment__container");
        let _id = parentContainer.id;
        if (_id){
            let childrenContainer = parentContainer.querySelectorAll(`[dataset=${_id}]`);
            childrenContainer.forEach(child => child.classList.toggle('opened'));
        }
    })
);

 </script>
